<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Portfoliotracker - Market</title>
        <link href="trade_style.css" rel="stylesheet">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    </head>
</html>

<body>
    <div id="topBar_id">
        <h1>PORTFOLIOTRACKER</h1>
        <span class="material-symbols-outlined" id="topBar_goBack_id">home</span>
    </div>

    <ul>
        <li><a href="/dashboard"><span class="material-symbols-outlined">dashboard</span>Dashboard</a></li>
        <li><a href="/portfolios"><span class="material-symbols-outlined">folder_open</span>Portfolios</a></li>
        <li><a href="/trade" style="color: gray;"><span class="material-symbols-outlined" style="color: gray;">query_stats</span>Market</a></li>
        <li><a href="/accounts"><span class="material-symbols-outlined">account_balance_wallet</span>Accounts</a></li>
        <li><a href="#about"><span class="material-symbols-outlined">person</span>Profile</a></li>
      </ul>

      <div id="stockBox_id">
        <input placeholder="Search stock..." autofocus id="searchStocks_input_id">
        <div id="boi" style="color: white"></div>
      </div>
      
      <div id="ViewBuystockBox_id">
        <div id="viewStock_id">
          
          <canvas id="myChart"></canvas>
        </div>
        <div id="StockPurchaseInfo_id">
          <input id="NumberOfStocks_id" type="number" max="99999" min="1" placeholder="1">
          <button id="BuyStockButton_id">Purchase</button>
        </div>
      </div>
</body>

<style>
    #stockBox_id{
        background-color: #252525;
        max-height: 450px;
        overflow-y: scroll;
        overflow-x: hidden;
    }
    #stockBox_id button{
        border: 1px solid lightgray;
        font-family: 'Franklin Gothic Book';
        margin: 0;
        padding: 9px;
        display: block;
        width: 100%;
        background-color: transparent;
        outline: none;
        color: lightgray;
        text-align: left;
    }
    #stockBox_id button:hover{
        cursor: pointer;
        color: dodgerblue;
    }
    #viewStock_id{
        display: block;
        background-color: #252525;
        color: lightgray;
        font-family: bahnschrift;
        float: right;
        padding:10px;
        width: 100%;
        height: 395px;
        border-radius: 13px;
    }
    #viewStock_id p{
        font-family: normalskrift;
    }
    #ViewBuystockBox_id{
     
      float: right;
      width: 46%;
      margin-top: 3%;
    }
    #BuyStockButton_id{
      background-color: green;
      color: white;
      font-family: normalskrift;
      outline: none;
      border: none;
      padding: 7px 20px 7px 20px;
      margin-top: 1%;
      font-size: 15px;
      border-bottom-right-radius: 7px;
      border-top-right-radius: 7px;
    }
    #BuyStockButton_id:hover{
      cursor: pointer;
      background-color: darkgreen;
    }
    #NumberOfStocks_id{
      width: 20%;
      font-family: normalskrift;
      border-bottom-left-radius: 7px;
      border-top-left-radius: 7px;
      padding: 7px;
      font-size: 15px;
      border: none;
      outline: none;
      background-color: lightgray;
     
      
    }
    
</style>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>


<script>
    const stocks = [
        "Apple Inc. (AAPL)",   // Apple Inc.
        "Microsoft Corporation, Inc (MSFT)",   // Microsoft Corporation
        "Amazon.com, Inc. (AMZN)",   // Amazon.com, Inc.
        "Alphabet, Inc. (GOOG)",   // Alphabet Inc. (Class C)
        "Meta Platforms, Inc. (META)",   // Meta Platforms, Inc.
        "Nvidia Corporation (NVDA)",   // NVIDIA Corporation
        "Tesla, Inc. (TSLA)",   // Tesla, Inc.
        "Intel Corporation (INTC)",   // Intel Corporation
        "Adobe, Inc. (ADBE)",   // Adobe Inc.
        "Netflix, Inc. (NFLX)",   // Netflix, Inc.
        "PayPal Holdings, Inc. (PYPL)",   // PayPal Holdings, Inc.
        "Cisco Systems, Inc. (CSCO)",   // Cisco Systems, Inc.
        "PepsiCo, Inc. (PEP)",    // PepsiCo, Inc.
        "Costco Wholesale Corporation (COST)",   // Costco Wholesale Corporation
];
const stocksTicker = [
  "AAPL", "MSFT", "AMZN", "GOOG", "META", "NVDA", "TSLA", "INTC", "ADBE", "NFLX", "PYPL", "CSCO", "PEP", "COST"
];

for (let i = 0; i < stocks.length; i++) {
    const para = document.createElement("button");
    const node = document.createTextNode(stocks[i]);

    para.setAttribute("data-ticker", stocksTicker[i]);
    para.type = "button";

    para.appendChild(node);
    
    para.addEventListener("click", function(event) {
        let ticker = event.currentTarget.dataset.ticker;
        console.log("Ticker clicked:", ticker); // For debugging
        retrieveStockTicker(ticker);
    });

    const element = document.getElementById("boi");
    element.appendChild(para);
}







// Search stocks //
let userInput_SearchStocks = "";

function searchStocks(event) {
  userInput_SearchStocks = document.getElementById("searchStocks_input_id").value.toLowerCase();

  const buttons = document.querySelectorAll("#boi button");

  buttons.forEach(button => {
    const text = button.textContent.toLowerCase();
    if (text.includes(userInput_SearchStocks)) {
      button.style.display = "inline-block"; // or "block", depending on your layout
    } else {
      button.style.display = "none";
    }
  });
}
document.getElementById("searchStocks_input_id").addEventListener("keyup", searchStocks);






// -------------------------------------------------------------------------------------//

// RETRIEVE STOCK DATA //

// -------------------------------------------------------------------------------------//


let boi = [];

function retrieveStockTicker(ticker) {
    let key = ticker; // Denne variabel bestemmer hvilket data der hentes
    console.log(ticker);

    fetch(`/api/data?key=${key}`)
      .then(res => res.json())
      .then(data => {
        if (data.error) {
            console.log(data.error);
        } else {
            console.log(data);  // This will log the fetched stock data (prices)
            boi = data;
            displayStock();
        }
      })
      .catch(error => {
        console.error('Error fetching data:', error);
      });
}



function displayStock()
{
  const xValues = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21];
  new Chart("myChart", {
    type: "line",
    data: {
    labels: xValues,
    datasets: [{ 
      data: boi,
      borderColor: "blue",
      fill: false
    }]
  },
  options: {
    legend: {display: false}
  }
});
}





</script>