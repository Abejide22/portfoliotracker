<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Portfoliotracker - Market</title>
        <link href="trade_style.css" rel="stylesheet">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
        <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
        <link rel="icon" type="image/x-icon" href="/public/favicon.ico">
        <link href="shared_components.css" rel="stylesheet">
    </head>
</html>

<body>
  <!-- Top Bar -->
  <%- include('partials/topbar') %>

  <!-- Side Navigation -->
  <%- include('partials/sidebar') %>

      
  <br>
      <div id="stockBox_id">
        <input placeholder="Search stocks on CSE..." autofocus id="searchStocks_input_id">
        <div id="stockListBox_id"></div>
      </div>
      
      <div id="ViewBuystockBox_id">
        <div id="viewStock_id">
          <span id="aktieNavn_id"></span>
          <hr id="aktieNavnLinje_id">
          <div id="myChart"></div>
        </div>
        <div id="StockPurchaseInfo_id">
        
            <input id="NumberOfStocks_id" name="antalAktier" type="number" max="99999" min="1" placeholder="1" required />
            <span id="totalPrice_id">0.00 DKK</span>
            <select name="porteføljeSelect" id="vælgPortefølje_id" required>
              <option value="">Vælg portefølje</option>
              <!-- Dynamisk indhold her -->
              </select>
              
              <select name="kontoSelect" id="vælgKonto_id" required>
                <option value="">Vælg konto</option>
                <!-- Dynamisk indhold her -->
                </select>
                
                <input type="hidden" name="aktieTickerValgt" id="aktieTickerValgt" />
                <input type="hidden" name="totalPris" id="totalPrisInput" />
                <button id="BuyStockButton_id" onclick="købAktie_tjekForhold()">Purchase</button>
            
            </div>
          </div>      
        </body>


<script>
let stockName = "";
  let aktieData = ""; // Variabel der skal indeholde aktie data der kommer fra api
  let aktieTickerValgt = ""; // Variabel der skal gemme tickeren på aktien der er blevet valgt
  let aktieNavnValgt = ""; // Variabel der skal gemme navn på aktien der er blevet valgt


function lavListeMedPorteføljer(){
  const portfolios = <%- JSON.stringify(portfolios) %>;

  // LAVER ELEMENTER TIL PORTEFØLJE DROPDOWN /

  for(let i = 0; i < portfolios.length; i++){
    const porteføljeDropdown = document.getElementById("vælgPortefølje_id");
    const nyOption = document.createElement('option');
    
    nyOption.textContent = portfolios[i].name;
    
    porteføljeDropdown.appendChild(nyOption);
  } 
}
lavListeMedPorteføljer();


function lavListeMedAccounts(){
  
  const accounts = <%- JSON.stringify(accounts) %>;
  console.log(accounts);

  for(let i = 0; i < accounts.length; i++){
    const accountsDropdown = document.getElementById("vælgKonto_id");
    const nyOption = document.createElement('option');
    
    nyOption.textContent = accounts[i].name;
    
    accountsDropdown.appendChild(nyOption);
  }
}
lavListeMedAccounts(); 









function købAktie_tjekForhold() {
  porteføljeSelect = document.getElementById("vælgPortefølje_id");
  kontoSelect = document.getElementById("vælgKonto_id");

  const porteføljeText = porteføljeSelect.options[porteføljeSelect.selectedIndex].text; // henter den valgte tekst
  const kontoText = kontoSelect.options[kontoSelect.selectedIndex].text; // henter den valgte tekst

  if (kontoText == "Vælg konto" && porteføljeText == "Vælg portefølje" && aktieNavnValgt.length == 0)
  {
    alert("Du mangler at vælge en aktie, en portefølje og en konto.");
  }
  if (aktieNavnValgt.length == 0){
    alert("Du mangler at vælge en aktie.");
  }
  if (porteføljeText == "Vælg portefølje")
  {
    alert("Du mangler at vælge en portefølje.");
  }
  if (kontoText == "Vælg konto")
  {
    alert("Du mangler at vælge en konto.");
  } 
  else
  {
    foretagAktiekøb();
  }
}


// VARIABLER DER SKAL BRUGES NÅR BRUGEREN KØBER AKTIE
let antalAktier = 0; // Antallet af aktie brugeren har tastet ind
let porteføljeSelect = "";
let kontoSelect = "";


function foretagAktiekøb() {
  antalAktier = parseInt(document.getElementById("NumberOfStocks_id").value);
  porteføljeSelect = document.getElementById("vælgPortefølje_id").value;
  kontoSelect = document.getElementById("vælgKonto_id").value;
  
 

  if (isNaN(antalAktier) || antalAktier <= 0 || !porteføljeSelect || !kontoSelect) {
    alert("Udfyld alle felter korrekt og vælg en aktie først.");
    return;
  }


  const totalPris = parseFloat((antalAktier * currentPrice).toFixed(2));

  fetch('/trade/buy', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ 
      antalAktier,
      porteføljeSelect,
      kontoSelect,
      aktieTickerValgt,
      totalPris
    })
  })
  .then(response => {
    if (response.redirected)
    {
      window.location.href = response.url; // håndter redirect til /portfolios
    } else if (!response.ok) {
      throw new Error("Fejl ved køb");
    }
  })
  .catch(error => {
    console.error("Fejl ved køb:", error);
    alert("Noget gik galt under købet.");
    
  });
}









const tickers = [
      "ALMB.CO",
      "AMBU-B.CO",
      "MAERSK-A.CO",
      "MAERSK-B.CO",
      "AQP.CO",
      "ATLA-DKK.CO",
      "BO.CO",
      "BAVA.CO",
      "AOJ-B.CO",
      "CARL-A.CO",
      "CARL-B.CO",
      // "CHR.CO",
      "COLO-B.CO",
      "DANSKE.CO",
      "DEMANT.CO",
      "DFDS.CO",
      "DNORD.CO",
      "DSV.CO",
      "FLS.CO",
      "GMAB.CO",
      "GN.CO",
      "HLUN-B.CO",
      // "HYDRCT.CO",
      "ISS.CO",
      "JYSK.CO",
      "NETC.CO",
      "NKT.CO",
      "NORTHM.CO",
      "NSIS-B.CO",
      "NOVO-B.CO",
      "NTG.CO",
      "ORSTED.CO",  // Kun én forekomst
      "PNDORA.CO",
      "RBREW.CO",
      "ROCK-B.CO",
      "SPNO.CO",
      "STG.CO",
      "STRAP.CO",
      "SPKSJF.CO",
      // "SIM.CO",
      "TRYG.CO",
      "VWS.CO"
    ];

const aktienavne = [
  "Alm. Brand A/S",
  "Ambu A/S",
  "A.P. Møller - Mærsk A/S (A)",
  "A.P. Møller - Mærsk A/S (B)",
  "Aquaporin A/S",
  "Atlantic Petroleum",
  "Bang & Olufsen A/S",
  "Bavarian Nordic A/S",
  "Brdr. A&O Johansen A/S (B)",
  "Carlsberg A/S (A)",
  "Carlsberg A/S (B)",
  // "Chr. Hansen Holding A/S",
  "Coloplast A/S (B)",
  "Danske Bank A/S",
  "Demant A/S",
  "DFDS A/S",
  "D/S Norden A/S",
  "DSV A/S",
  "FLSmidth & Co. A/S",
  "Genmab A/S",
  "GN Store Nord A/S",
  "H. Lundbeck A/S",
  // "Hydract A/S",
  "ISS A/S",
  "Jyske Bank A/S",
  "Netcompany Group A/S",
  "NKT A/S",
  "North Media A/S",
  "Novonesis A/S (B)",
  "Novo Nordisk A/S (B)",
  "NTG Nordic Transport Group A/S",
  "Ørsted A/S",
  "Pandora A/S",
  "Royal Unibrew A/S",
  "Rockwool International A/S (B)",
  "Spar Nord Bank A/S",
  "Scandinavian Tobacco Group A/S",
  "Strategic Partners A/S",
  "Sparekassen Sjælland",
  // "SimCorp A/S",
  "Tryg A/S",
  "Vestas Wind Systems A/S"
];



const nuværendePriser = <%- JSON.stringify(nuværendePriser) %>;
  console.log(nuværendePriser); // Nu kan du bruge det i browserens JS


let currentPrice = 0; // Nuværende pris på den valgte aktie - værdi tildeles i lavListMedAktier

function lavListMedAktier() {
  for (let i = 0; i < aktienavne.length; i++) {
    const button = document.createElement("button");
    button.type = "button";
    button.value = tickers[i];

    // Tilføj navnet direkte som tekst
    button.textContent = aktienavne[i];

    // Opret pris-span og tilføj det bagefter
    const prisSpan = document.createElement("span");
    
    prisSpan.textContent = ` ${nuværendePriser[i].price.toFixed(2)} kr`; // Tilføj mellemrum foran og gør at der kun vises to decimaler
    prisSpan.style.marginLeft = "10px"; // Lidt afstand, valgfrit

    button.appendChild(prisSpan); // Tilføj prisen efter navnet

    // OnClick-handler som før
    button.onclick = async function(event) {
      aktieTickerValgt = event.target.value;
      aktieNavnValgt = event.target.childNodes[0].textContent.trim(); // Henter kun den første tekstnode fra knappen uden span


      document.getElementById("NumberOfStocks_id").value = 1; // nulsætter antal felt

      const buttons = document.querySelectorAll("#stockListBox_id button");
      buttons.forEach(function(button) {
        button.style.color = "lightgray";
        button.style.fontWeight = "normal";
      });

      event.target.style.color = "dodgerblue";
      event.target.style.fontWeight = "bold";

      try {
        const response = await fetch('/trade', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ stockName: aktieTickerValgt })
        });

        if (!response.ok) throw new Error('fejl');

        aktieData = await response.json();
        console.log("Server svar:", aktieData);
        
        aktieData.closes.reverse(); // Reverse priserne i arrayet 

        currentPrice = aktieData.closes[aktieData.closes.length - 1].toFixed(2);
        document.getElementById("totalPrice_id").innerHTML = currentPrice + " DKK";
      } catch (error) {
        console.error('Fejl ved fetch:', error);
      }

      displayStock(event);
    };

    document.getElementById("stockListBox_id").appendChild(button);
  }
}


lavListMedAktier();



// ÆNDRE I TOTAL PRIS NÅR DER KLIKKES ELLER SKRIVES ET NYT ANTAL AKTIER

const aktieInputFelt = document.getElementById("NumberOfStocks_id");

aktieInputFelt.addEventListener('input', () => {
  antalAktier = document.getElementById("NumberOfStocks_id").value;
  document.getElementById("totalPrice_id").innerHTML = (antalAktier * currentPrice).toFixed(2) + " DKK";
});






// søg efterr aktier //
let userInput_SearchStocks = "";

function searchStocks(event) {
  userInput_SearchStocks = document.getElementById("searchStocks_input_id").value.toLowerCase();


  const buttons = document.querySelectorAll("#stockBox_id button");

  buttons.forEach(button => {
    const text = button.textContent.toLowerCase();
    if (text.includes(userInput_SearchStocks)) {
      button.style.display = "inline-block";
    } else {
      button.style.display = "none";
    }
  });
}
document.getElementById("searchStocks_input_id").addEventListener("keyup", searchStocks);




function displayStock(event){

  document.getElementById("aktieNavn_id").innerHTML = aktieNavnValgt + " (" + aktieTickerValgt + ")"; // Viser navn og ticker på valgt aktie over grafen
  document.getElementById("aktieNavnLinje_id").style.display = "block";

  let aktieDataPriser = aktieData.closes;
let aktieDataDatoer = aktieData.dates;

// Opdater sidste værdi

// Generér forkortet version igen
let aktieDataPriser_forkortet = aktieDataPriser.map(num => parseFloat(num.toFixed(2)));


  aktieDataDatoer.reverse(); aktieDataPriser.reverse(); // Rerverser så dato og priser udskrives i rigtig række følge fra ældste dato til nyeste dato

  document.getElementById("myChart").innerHTML = "";

  const xValues = aktieDataDatoer;
const options = {
      chart: {
        type: 'line',
        height: 350,
        fontFamily: 'normalSkrift'
      },
      colors: ['blue'], // Graflinje farve
      
      series: [{
        name: 'Aktiekurs',
        data: aktieDataPriser_forkortet
      }],
      xaxis: {
        categories: xValues,
        labels: {
          style: {
            colors: '#fff' // Tekstfarve på x-aksen
          }
        },
        title: {
         
          style: {
            color: 'lightgray'
          }
        }
      },
      yaxis: {
        labels: {
          style: {
            colors: 'lightgray' // Tekstfarve på y-aksen
          }
        },
        title: {
          text: 'Kurs (DKK)',
          style: {
            color: 'lightgray'
          }
        }
      },
    

      stroke: {
    curve: 'smooth',
    width: 2.5  // Ændrer linjens tykkelse
  },

      tooltip: {
        theme: 'dark',
        style: {
          fontSize: '14px',
          fontFamily: 'normalSkrift',
          backgroundColor: 'black'
        },
        marker: {
          show: true,
          fillColors: ['blue']
        },
  y: {
    formatter: function (value) {
      return value + " DKK";
    }
  }
},

grid: {
  show: true, // sæt til false hvis du vil skjule alle gitterlinjer
  borderColor: 'gray', // farven på linjerne
  strokeDashArray: 4, // gør dem stiplede (0 = fuldt optrukket)
  xaxis: {
    lines: {
      show: false // fjerner vertikale linjer
    }
  },
  yaxis: {
    lines: {
      show: true // viser horisontale linjer
    }
  }
}
    };
    const chart = new ApexCharts(document.querySelector("#myChart"), options);
    chart.render();

  
};





// Logout confirmation
const logoutForm = document.querySelector('form[action="/logout"]');
if (logoutForm) {
  logoutForm.addEventListener("submit", function (event) {
    const confirmed = confirm("Er du sikker på, at du vil logge ud?");
    if (!confirmed) {
      event.preventDefault(); // Stopper formularen
    }
  });
}
</script>